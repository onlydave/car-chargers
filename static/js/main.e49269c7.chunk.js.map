{"version":3,"sources":["selectList.js","api/fetchEcars.js","LocationStatusList.js","AppHeader.js","App.js","utils/onWindowFocus.js","serviceWorker.js","index.js","logo.svg"],"names":["SelectList","handleInputChange","event","_event$target","target","name","checked","_this","props","addLocation","removeLocation","_this2","this","_this$props","locations","search","searchRegex","split","map","searchString","RegExp","size","react_default","a","createElement","keySeq","key","find","thisSearchRegex","test","className","type","selectedLocations","has","onChange","src","logo","alt","React","Component","convert","require","typeStatusRegex","fetchEcars","fetch","then","response","text","xml","chargers","xml2js","compact","kml","Document","Placemark","Map","mapLinks","forEach","place","_text","description","_cdata","matches","Object","toConsumableArray","matchAll","mapLink","match","status","trim","setIn","length","console","warn","LocationStatusList","openMap","url","currentTarget","dataset","maplink","window","open","changeLocationName","nickname","newNickname","prompt","log","setLocationNickname","locationNicknames","style","paddingTop","paddingBottom","location","get","padding","display","alignItems","justifyContent","overflow","fontSize","lineHeight","color","marginTop","marginLeft","index_es","icon","faMapMarkerAlt","border","onClick","data-maplink","entrySeq","_ref","_ref2","slicedToArray","plugName","available","iconColor","faBolt","faPlug","paddingRight","background","faTrash","data-nickname","flexGrow","faPen","AppHeader","fetchError","loading","setSearch","getLocations","position","left","right","top","value","placeholder","width","borderRight","borderRadius","margin","height","boxShadow","WebkitAppearance","borderLeft","faTimes","faSync","getSavedImmutable","arguments","undefined","localLocations","localStorage","getItem","fromJS","JSON","parse","isKeyed","toMap","toSet","App","state","Set","setState","setItem","stringify","toJS","catch","_console","error","apply","add","setSelected","remove","clearSelected","set","callback","document","addEventListener","visibilityState","_this$state","src_AppHeader","selectList","src_LocationStatusList","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","concat","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e49269c7.chunk.js","sourcesContent":["// @flow\n\nimport React from \"react\";\n\nimport logo from \"./logo.svg\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport { Set } from \"immutable\";\n\nexport type SelectListProps = {\n  removeLocation: string => void,\n  addLocation: string => void,\n  selectedLocations: Set<string>,\n  locations: Locations,\n  search: string\n};\n\nclass SelectList extends React.Component<SelectListProps> {\n  handleInputChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      target: { name, checked }\n    } = event;\n\n    if (checked) {\n      this.props.addLocation(name);\n    } else {\n      this.props.removeLocation(name);\n    }\n  };\n\n  render() {\n    const { locations, search } = this.props;\n    const searchRegex = search\n      .split(\" \")\n      .map(searchString => new RegExp(searchString, \"i\"));\n    if (!locations.size) {\n      return (\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      );\n    }\n\n    return (\n      <div>\n        {locations.keySeq().map(key => {\n          if (\n            search &&\n            !!searchRegex.find(thisSearchRegex => !thisSearchRegex.test(key))\n          ) {\n            return null;\n          }\n\n          return (\n            <label key={key} className=\"selectortron\">\n              <div className=\"\">{key}</div>\n              <input\n                name={key}\n                type=\"checkbox\"\n                checked={this.props.selectedLocations.has(key)}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default SelectList;\n","// @flow\n\nimport { Map } from \"immutable\";\n\nimport matchAll from \"string.prototype.matchall\";\n\nconst convert = require(\"xml-js\");\n\nexport const topaz =\n  \"Circle K / Topaz Service Station, Templeville Road, Dublin 6, County Dublin\";\nconst typeStatusRegex = /([\\w\\s()-.]*kW\\s)\\(([\\w\\s-,]{3,})\\)/gim;\n\nexport type Locations = Map<string, Map<string, string>>;\n\ntype Placemark = {\n  name: { _text: string },\n  description: { _cdata: string }\n};\n\nexport const fetchEcars = () =>\n  fetch(\n    \"https://cors-anywhere.herokuapp.com/https://www.esb.ie/ECARS/kml/charging-locations.kml\"\n  )\n    .then(response => response.text())\n    .then(xml => {\n      const json = convert.xml2js(xml, { compact: true });\n\n      const chargers = json.kml.Document.Placemark;\n\n      let locations: Locations = Map({});\n      const mapLinks = {};\n\n      chargers.forEach((place: Placemark) => {\n        const name = place.name._text;\n        const description = place.description._cdata;\n\n        const matches = [...matchAll(description, typeStatusRegex)];\n\n        const mapLink = description.match(/(https:\\/\\/www.google.com\\S*)\"/);\n        if (mapLink) {\n          mapLinks[name] = mapLink[1];\n        }\n\n        matches.forEach(match => {\n          const status = /Note:/i.test(description)\n            ? \"Unknown\"\n            : match[2].trim();\n          locations = locations.setIn([name, match[1].trim()], status);\n        });\n        if (!matches.length) {\n          console.warn(\"no match:\", description);\n        }\n      });\n\n      return { mapLinks, locations };\n    });\n\nexport default fetchEcars;\n","// @flow\n\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faPlug,\n  faMapMarkerAlt,\n  faTrash,\n  faPen\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport { Map, Set } from \"immutable\";\n\nexport type StatusListProps = {\n  removeLocation: string => void,\n  setLocationNickname: (string, string) => void,\n  locationNicknames: Map<string, string>,\n  selectedLocations: Set<string>,\n  locations: Locations,\n  mapLinks: {\n    [name: string]: string\n  }\n};\n\nclass LocationStatusList extends React.Component<StatusListProps> {\n  openMap = (event: SyntheticInputEvent<HTMLElement>) => {\n    const url = event.currentTarget.dataset.maplink;\n    if (url) {\n      window.open(url, \"_blank\");\n    }\n  };\n\n  removeLocation = (event: SyntheticInputEvent<HTMLButtonElement>) => {\n    const {\n      target: { name }\n    } = event;\n    this.props.removeLocation(name);\n  };\n\n  changeLocationName = (event: SyntheticInputEvent<HTMLButtonElement>) => {\n    const {\n      target: { name }\n    } = event;\n    const nickname = event.currentTarget.dataset.nickname;\n    const newNickname = window.prompt(name, nickname);\n    console.log(newNickname);\n    if (newNickname || newNickname === \"\") {\n      this.props.setLocationNickname(name, newNickname);\n    }\n  };\n\n  render() {\n    const {\n      locations,\n      selectedLocations,\n      locationNicknames,\n      mapLinks\n    } = this.props;\n\n    return (\n      <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n        {selectedLocations.map(name => {\n          const location = locations.get(name);\n          if (!location) {\n            return null;\n          }\n          const nickname = locationNicknames.get(name);\n          return (\n            <div key={name} style={{ padding: 10 }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                {!!nickname ? (\n                  <div style={{ overflow: \"hidden\" }}>\n                    <div style={{ fontSize: 35, lineHeight: 0.8 }}>\n                      {nickname}\n                    </div>\n                    <div\n                      className=\"ellipsis\"\n                      style={{\n                        fontSize: 10,\n                        color: \"gray\",\n                        marginTop: 5,\n                        marginLeft: 2\n                      }}\n                    >\n                      {name}\n                    </div>\n                  </div>\n                ) : (\n                  name\n                )}\n                <div>\n                  <FontAwesomeIcon\n                    icon={faMapMarkerAlt}\n                    size=\"2x\"\n                    style={{\n                      marginLeft: 5,\n                      padding: \"5px 10px\",\n                      border: \"1px solid teal\"\n                    }}\n                    onClick={this.openMap}\n                    data-maplink={mapLinks[name]}\n                    color=\"teal\"\n                  />\n                </div>\n              </div>\n              <div style={{ padding: 5 }}>\n                {location.entrySeq().map(([plugName, status]) => {\n                  const available = /Available/i.test(status);\n                  const iconColor = available ? \"lime\" : \"gray\";\n                  const color = available ? \"black\" : \"gray\";\n                  const icon = /DC/.test(plugName) ? faBolt : faPlug;\n                  return (\n                    <div key={plugName} style={{ color, padding: 5 }}>\n                      <FontAwesomeIcon\n                        icon={icon}\n                        color={iconColor}\n                        style={{ paddingRight: 5 }}\n                      />\n                      {plugName}: {status}\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <button\n                  onClick={this.removeLocation}\n                  name={name}\n                  style={{\n                    padding: 10,\n                    border: \"1px solid gray\",\n                    background: \"white\"\n                  }}\n                >\n                  <FontAwesomeIcon icon={faTrash} color=\"gray\" size=\"1x\" />\n                </button>\n                <button\n                  onClick={this.changeLocationName}\n                  name={name}\n                  data-nickname={nickname}\n                  style={{\n                    marginLeft: 10,\n                    padding: 10,\n                    border: \"1px solid teal\",\n                    color: \"teal\",\n                    flexGrow: 1,\n                    background: \"white\"\n                  }}\n                >\n                  Edit name\n                  <FontAwesomeIcon\n                    icon={faPen}\n                    color=\"teal\"\n                    style={{ marginLeft: 10 }}\n                  />\n                </button>\n              </div>\n              <hr style={{ marginTop: 20 }} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LocationStatusList;\n","// @flow\nimport React from \"react\";\nimport \"./App.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ntype HeaderProps = {\n  search: string,\n  fetchError: boolean,\n  loading: boolean,\n  setSearch: (event: SyntheticInputEvent<HTMLInputElement>) => void,\n  getLocations: (event: SyntheticInputEvent<HTMLInputElement>) => void\n};\n\nconst AppHeader = (props: HeaderProps) => {\n  const { search, fetchError, loading, setSearch, getLocations } = props;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"fixed\",\n        left: 0,\n        right: 0,\n        top: 0,\n        background: \"white\"\n      }}\n    >\n      <input\n        onChange={setSearch}\n        value={search}\n        placeholder=\"Search Locations...\"\n        style={{\n          width: 10,\n          flexGrow: 1,\n          padding: 10,\n          fontSize: 23,\n          border: \"1px solid black\",\n          borderRight: \"none\",\n          borderRadius: 0,\n          margin: 0,\n          height: 28,\n          boxShadow: \"none\",\n          WebkitAppearance: \"none\"\n        }}\n      />\n      <div\n        onClick={setSearch}\n        value=\"\"\n        style={{\n          paddingRight: 10,\n          paddingTop: 8,\n          paddingBottom: 8,\n          background: \"none\",\n          border: \"1px solid black\",\n          borderLeft: \"none\"\n        }}\n      >\n        <FontAwesomeIcon icon={faTimes} size=\"2x\" color=\"gray\" />\n      </div>\n      <div onClick={getLocations} style={{ padding: 10 }}>\n        <FontAwesomeIcon\n          icon={faSync}\n          size=\"2x\"\n          color={fetchError ? \"red\" : \"teal\"}\n          className={loading ? \"spin\" : \"\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","// @flow\nimport React from \"react\";\nimport \"./App.css\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport SelectList from \"./selectList\";\nimport { Map, Set, fromJS, isKeyed } from \"immutable\";\nimport fetchEcars from \"./api/fetchEcars\";\nimport LocationStatusList from \"./LocationStatusList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport onWindowFocus from \"./utils/onWindowFocus\";\nimport AppHeader from \"./AppHeader\";\n\nconst getSavedImmutable = (key = \"selectedLocations\") => {\n  const localLocations = localStorage.getItem(key);\n  if (!localLocations) return false;\n  const response = fromJS(JSON.parse(localLocations), function(key, value) {\n    return isKeyed(value) ? value.toMap() : value.toSet();\n  });\n  return (response: any);\n};\n\ntype AppState = {\n  selectedLocations: Set<string>,\n  locations: Locations,\n  locationNicknames: Map<string, string>,\n  search: string,\n  mapLinks: {\n    [name: string]: string\n  },\n  fetchError: boolean,\n  loading: boolean\n};\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    selectedLocations: getSavedImmutable(\"selectedLocations\") || Set(),\n    locations: getSavedImmutable(\"locations\") || Map(),\n    locationNicknames: getSavedImmutable(\"locationsNicknames\") || Map(),\n    search: \"\",\n    mapLinks: {},\n    fetchError: false,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.getLocations();\n    onWindowFocus(this.getLocations);\n  }\n\n  getLocations = () => {\n    this.setState({\n      loading: true\n    });\n    fetchEcars()\n      .then(({ locations, mapLinks }) => {\n        localStorage.setItem(\"locations\", JSON.stringify(locations.toJS()));\n        this.setState({\n          locations,\n          mapLinks,\n          fetchError: false,\n          loading: false\n        });\n      })\n      .catch((...error) => {\n        console.error(...error);\n        this.setState({\n          fetchError: true,\n          loading: false\n        });\n      });\n  };\n\n  addLocation = (location: string) => {\n    const selectedLocations = this.state.selectedLocations.add(location);\n    this.setSelected(selectedLocations);\n  };\n\n  removeLocation = (location: string) => {\n    const selectedLocations = this.state.selectedLocations.remove(location);\n    this.setSelected(selectedLocations);\n  };\n\n  clearSelected = () => {\n    this.setSelected(Set());\n  };\n\n  setSelected = (\n    selectedLocations: $PropertyType<AppState, \"selectedLocations\">\n  ) => {\n    this.setState({\n      selectedLocations\n    });\n    localStorage.setItem(\n      \"selectedLocations\",\n      JSON.stringify(selectedLocations.toJS())\n    );\n  };\n\n  setSearch = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    this.setState({\n      search: event.target.value || \"\"\n    });\n  };\n\n  setLocationNickname = (key: string, nickname: string) => {\n    const locationNicknames = this.state.locationNicknames.set(key, nickname);\n    this.setState({\n      locationNicknames\n    });\n    localStorage.setItem(\n      \"locationsNicknames\",\n      JSON.stringify(locationNicknames.toJS())\n    );\n  };\n\n  render() {\n    const {\n      locations,\n      selectedLocations,\n      locationNicknames,\n      search,\n      mapLinks,\n      fetchError,\n      loading\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <AppHeader\n          search={search}\n          fetchError={fetchError}\n          loading={loading}\n          setSearch={this.setSearch}\n          getLocations={this.getLocations}\n        />\n        <div style={{ paddingTop: 60 }}>\n          {search || !selectedLocations.size ? (\n            <SelectList\n              search={search}\n              locations={locations}\n              selectedLocations={selectedLocations}\n              removeLocation={this.removeLocation}\n              addLocation={this.addLocation}\n            />\n          ) : (\n            <LocationStatusList\n              locations={locations}\n              selectedLocations={selectedLocations}\n              removeLocation={this.removeLocation}\n              setLocationNickname={this.setLocationNickname}\n              mapLinks={mapLinks}\n              locationNicknames={locationNicknames}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// @flow\n\nexport default (callback: () => any) => {\n  document.addEventListener(\"visibilitychange\", () => {\n    if (document.visibilityState === \"visible\") {\n      callback();\n    }\n  });\n  window.addEventListener(\"focus\", callback);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}