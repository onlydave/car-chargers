{"version":3,"sources":["logo.svg","selectList.js","api/fetchEcars.js","LocationStatusList.js","App.js","utils/onWindowFocus.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SelectList","handleInputChange","event","_event$target","target","name","checked","_this","props","addLocation","removeLocation","_this2","this","_this$props","locations","search","searchRegex","split","map","searchString","RegExp","size","react_default","a","createElement","keySeq","key","find","thisSearchRegex","test","className","type","selectedLocations","has","onChange","src","logo","alt","React","Component","convert","require","typeStatusRegex","fetchEcars","fetch","then","response","text","xml","chargers","xml2js","compact","kml","Document","Placemark","Map","mapLinks","forEach","place","_text","description","_cdata","matches","Object","toConsumableArray","matchAll","mapLink","match","setIn","trim","length","console","warn","LocationStatusList","openMap","url","currentTarget","dataset","maplink","window","open","style","paddingTop","paddingBottom","location","get","padding","display","alignItems","justifyContent","index_es","icon","faMapMarkerAlt","paddingRight","onClick","data-maplink","color","entrySeq","_ref","_ref2","slicedToArray","plugName","status","available","iconColor","faBolt","faPlug","getSavedImmutable","arguments","undefined","localLocations","localStorage","getItem","fromJS","JSON","parse","value","isKeyed","toMap","toSet","App","state","Set","fetchError","loading","getLocations","setState","setItem","stringify","toJS","catch","add","setSelected","remove","clearSelected","setSearch","callback","document","addEventListener","visibilityState","_this$state","placeholder","width","flexGrow","fontSize","border","borderRight","background","borderLeft","faTimes","faSync","selectList","src_LocationStatusList","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","concat","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+SCsEzBC,6MAnDbC,kBAAoB,SAACC,GAAiD,IAAAC,EAGhED,EADFE,OAAUC,EAFwDF,EAExDE,KAFwDF,EAElDG,QAIhBC,EAAKC,MAAMC,YAAYJ,GAEvBE,EAAKC,MAAME,eAAeL,4EAIrB,IAAAM,EAAAC,KAAAC,EACuBD,KAAKJ,MAA3BM,EADDD,EACCC,UAAWC,EADZF,EACYE,OACbC,EAAcD,EACjBE,MAAM,KACNC,IAAI,SAAAC,GAAY,OAAI,IAAIC,OAAOD,EAAc,SAChD,OAAKL,EAAUO,KASbC,EAAAC,EAAAC,cAAA,WACGV,EAAUW,SAASP,IAAI,SAAAQ,GACtB,OACEX,GACEC,EAAYW,KAAK,SAAAC,GAAe,OAAKA,EAAgBC,KAAKH,KAErD,KAGPJ,EAAAC,EAAAC,cAAA,SAAOE,IAAKA,EAAKI,UAAU,gBACzBR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YAAYJ,GAC3BJ,EAAAC,EAAAC,cAAA,SACEnB,KAAMqB,EACNK,KAAK,WACLzB,QAASK,EAAKH,MAAMwB,kBAAkBC,IAAIP,GAC1CQ,SAAUvB,EAAKV,wBAtBvBqB,EAAAC,EAAAC,cAAA,UAAQM,UAAU,cAChBR,EAAAC,EAAAC,cAAA,OAAKW,IAAKC,IAAMN,UAAU,WAAWO,IAAI,iBArB1BC,IAAMC,mBCdzBC,EAAUC,EAAQ,IAIlBC,EAAkB,yCA2CTC,EAlCW,kBACxBC,MACE,2FAECC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,IACMC,EADOT,EAAQU,OAAOF,EAAK,CAAEG,SAAS,IACtBC,IAAIC,SAASC,UAE/BxC,EAAuByC,YAAI,IACzBC,EAAW,GAqBjB,OAnBAP,EAASQ,QAAQ,SAACC,GAChB,IAAMrD,EAAOqD,EAAMrD,KAAKsD,MAClBC,EAAcF,EAAME,YAAYC,OAEhCC,EAAOC,OAAAC,EAAA,EAAAD,CAAOH,EAAYK,SAASvB,IAEnCwB,EAAUN,EAAYO,MAAM,kCAC9BD,IACFV,EAASnD,GAAQ6D,EAAQ,IAG3BJ,EAAQL,QAAQ,SAAAU,GACdrD,EAAYA,EAAUsD,MAAM,CAAC/D,EAAM8D,EAAM,GAAGE,QAASF,EAAM,GAAGE,UAE3DP,EAAQQ,QACXC,QAAQC,KAAK,YAAaZ,KAIvB,CAAEJ,WAAU1C,uCCkDV2D,6MA1EbC,QAAU,SAACxE,GACT,IAAMyE,EAAMzE,EAAM0E,cAAcC,QAAQC,QACpCH,GACFI,OAAOC,KAAKL,EAAK,aAIrBjE,eAAiB,SAACR,GAAkD,IAEtDG,EACRH,EADFE,OAAUC,KAEZE,EAAKC,MAAME,eAAeL,4EAGnB,IAAAM,EAAAC,KAAAC,EAC4CD,KAAKJ,MAAhDM,EADDD,EACCC,UAAWkB,EADZnB,EACYmB,kBAAmBwB,EAD/B3C,EAC+B2C,SAEtC,OACElC,EAAAC,EAAAC,cAAA,OAAKyD,MAAO,CAAEC,WAAY,GAAIC,cAAe,KAC1CnD,EAAkBd,IAAI,SAAAb,GACrB,IAAM+E,EAAWtE,EAAUuE,IAAIhF,GAC/B,OAAK+E,EAKH9D,EAAAC,EAAAC,cAAA,OAAKE,IAAKrB,EAAM4E,MAAO,CAAEK,QAAS,KAChChE,EAAAC,EAAAC,cAAA,OACEyD,MAAO,CACLM,QAAS,OACTC,WAAY,aACZC,eAAgB,kBAGjBpF,EACDiB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,KAAMC,IACNvE,KAAK,KACL4D,MAAO,CAAEY,aAAc,IACvBC,QAASnF,EAAK+D,QACdqB,eAAcvC,EAASnD,GACvB2F,MAAM,UAGV1E,EAAAC,EAAAC,cAAA,OAAKyD,MAAO,CAAEK,QAAS,IACpBF,EAASa,WAAW/E,IAAI,SAAAgF,GAAwB,IAAAC,EAAApC,OAAAqC,EAAA,EAAArC,CAAAmC,EAAA,GAAtBG,EAAsBF,EAAA,GAAZG,EAAYH,EAAA,GACzCI,EAAY,aAAa1E,KAAKyE,GAC9BE,EAAYD,EAAY,OAAS,OACjCP,EAAQO,EAAY,QAAU,OAC9BZ,EAAO,KAAK9D,KAAKwE,GAAYI,IAASC,IAC5C,OACEpF,EAAAC,EAAAC,cAAA,OAAKE,IAAK2E,EAAUpB,MAAO,CAAEe,QAAOV,QAAS,IAC3ChE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,KAAMA,EACNK,MAAOQ,EACPvB,MAAO,CAAEY,aAAc,KAExBQ,EANH,KAMeC,MAKrBhF,EAAAC,EAAAC,cAAA,UAAQsE,QAASnF,EAAKD,eAAgBL,KAAMA,GAA5C,mBAGAiB,EAAAC,EAAAC,cAAA,YA3CK,eAvBcc,IAAMC,WCTjCoE,EAAoB,WAA+B,IAA9BjF,EAA8BkF,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,GAAAA,UAAA,GAAxB,oBACzBE,EAAiBC,aAAaC,QAAQtF,GAC5C,QAAKoF,GACYG,YAAOC,KAAKC,MAAML,GAAiB,SAASpF,EAAK0F,GAChE,OAAOC,YAAQD,GAASA,EAAME,QAAUF,EAAMG,WA0JnCC,6MAzIbC,MAAQ,CACNzF,kBAAmB2E,EAAkB,sBAAwBe,cAC7D5G,UAAW6F,EAAkB,cAAgBpD,cAC7CxC,OAAQ,GACRyC,SAAU,GACVmE,YAAY,EACZC,SAAS,KAQXC,aAAe,WACbtH,EAAKuH,SAAS,CACZF,SAAS,IAEXjF,IACGE,KAAK,SAAAqD,GAA6B,IAA1BpF,EAA0BoF,EAA1BpF,UAAW0C,EAAe0C,EAAf1C,SAClBuD,aAAagB,QAAQ,YAAab,KAAKc,UAAUlH,EAAUmH,SAC3D1H,EAAKuH,SAAS,CACZhH,YACA0C,WACAmE,YAAY,EACZC,SAAS,MAGZM,MAAM,WACL3H,EAAKuH,SAAS,CACZH,YAAY,EACZC,SAAS,SAKjBnH,YAAc,SAAC2E,GACb,IAAMpD,EAAoBzB,EAAKkH,MAAMzF,kBAAkBmG,IAAI/C,GAC3D,OAAO7E,EAAK6H,YAAYpG,MAG1BtB,eAAiB,SAAC0E,GAChB,IAAMpD,EAAoBzB,EAAKkH,MAAMzF,kBAAkBqG,OAAOjD,GAC9D,OAAO7E,EAAK6H,YAAYpG,MAG1BsG,cAAgB,WACd,OAAO/H,EAAK6H,YAAYV,kBAG1BU,YAAc,SACZpG,GASA,OAPAzB,EAAKuH,SAAS,CACZ9F,sBAEF+E,aAAagB,QACX,oBACAb,KAAKc,UAAUhG,EAAkBiG,SAE5B,QAGTM,UAAY,SAACrI,GACXK,EAAKuH,SAAS,CACZ/G,OAAQb,EAAME,OAAOgH,OAAS,yFClGrB,IAACoB,ED2CZ5H,KAAKiH,eC3COW,ED4CE5H,KAAKiH,aC3CrBY,SAASC,iBAAiB,mBAAoB,WACX,YAA7BD,SAASE,iBACXH,MAGJzD,OAAO2D,iBAAiB,QAASF,oCDgGxB,IAAAI,EAQHhI,KAAK6G,MANP3G,EAFK8H,EAEL9H,UACAkB,EAHK4G,EAGL5G,kBACAjB,EAJK6H,EAIL7H,OACAyC,EALKoF,EAKLpF,SACAmE,EANKiB,EAMLjB,WACAC,EAPKgB,EAOLhB,QAGF,OACEtG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,OAAKyD,MAAO,CAAEM,QAAS,SACrBjE,EAAAC,EAAAC,cAAA,SACEU,SAAUtB,KAAK2H,UACfnB,MAAOrG,EACP8H,YAAY,sBACZ5D,MAAO,CACL6D,MAAO,GACPC,SAAU,EACVzD,QAAS,GACT0D,SAAU,GACVC,OAAQ,kBACRC,YAAa,UAGjB5H,EAAAC,EAAAC,cAAA,UACEsE,QAASlF,KAAK2H,UACdnB,MAAM,GACNnC,MAAO,CACLY,aAAc,GACdsD,WAAY,OACZF,OAAQ,kBACRG,WAAY,SAGd9H,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAiBC,KAAM0D,IAAShI,KAAK,QAEvCC,EAAAC,EAAAC,cAAA,UAAQsE,QAASlF,KAAKiH,aAAc5C,MAAO,CAAE6D,MAAO,KAClDxH,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACEC,KAAM2D,IACNjI,KAAK,KACL2E,MAAO2B,EAAa,MAAQ,OAC5B7F,UAAW8F,EAAU,OAAS,OAInC7G,IAAWiB,EAAkBX,KAC5BC,EAAAC,EAAAC,cAAC+H,EAAD,CACExI,OAAQA,EACRD,UAAWA,EACXkB,kBAAmBA,EACnBtB,eAAgBE,KAAKF,eACrBD,YAAaG,KAAKH,cAGpBa,EAAAC,EAAAC,cAACgI,EAAD,CACE1I,UAAWA,EACXkB,kBAAmBA,EACnBtB,eAAgBE,KAAKF,eACrB8C,SAAUA,YAlIJlB,IAAMC,WEtBlBkH,EAAcC,QACW,cAA7B3E,OAAOK,SAASuE,UAEe,UAA7B5E,OAAOK,SAASuE,UAEhB5E,OAAOK,SAASuE,SAASxF,MACvB,2DAsCN,SAASyF,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThH,KAAK,SAAAqH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3C,QACfsC,UAAUC,cAAcO,YAI1BhG,QAAQiG,IACN,iHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlB3F,QAAQiG,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,UAO5BhC,MAAM,SAAAyC,GACLpG,QAAQoG,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOvJ,EAAAC,EAAAC,cAACsJ,EAAD,MAASrC,SAASsC,eAAe,SDgB1C,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,gBAAwBlG,OAAOK,SAAS8F,MACpDC,SAAWpG,OAAOK,SAAS+F,OAIvC,OAGFpG,OAAO2D,iBAAiB,OAAQ,WAC9B,IAAMmB,EAAK,GAAAuB,OAAMH,gBAAN,sBAEPxB,GAgEV,SAAiCI,EAAOC,GAEtClH,MAAMiH,GACHhH,KAAK,SAAAC,GAEJ,IAAMuI,EAAcvI,EAASwI,QAAQjG,IAAI,gBAEnB,MAApBvC,EAASwD,QACO,MAAf+E,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAM3I,KAAK,SAAAqH,GACjCA,EAAauB,aAAa5I,KAAK,WAC7BkC,OAAOK,SAASsG,aAKpB9B,EAAgBC,EAAOC,KAG1B5B,MAAM,WACL3D,QAAQiG,IACN,mEArFAmB,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAM3I,KAAK,WACjC0B,QAAQiG,IACN,gHAMJZ,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.3a21831a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// @flow\n\nimport React from \"react\";\n\nimport logo from \"./logo.svg\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport { Set } from \"immutable\";\n\nexport type SelectListProps = {\n  removeLocation: string => null,\n  addLocation: string => null,\n  selectedLocations: Set<string>,\n  locations: Locations,\n  search: string\n};\n\nclass SelectList extends React.Component<SelectListProps> {\n  handleInputChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    const {\n      target: { name, checked }\n    } = event;\n\n    if (checked) {\n      this.props.addLocation(name);\n    } else {\n      this.props.removeLocation(name);\n    }\n  };\n\n  render() {\n    const { locations, search } = this.props;\n    const searchRegex = search\n      .split(\" \")\n      .map(searchString => new RegExp(searchString, \"gmi\"));\n    if (!locations.size) {\n      return (\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      );\n    }\n\n    return (\n      <div>\n        {locations.keySeq().map(key => {\n          if (\n            search &&\n            !!searchRegex.find(thisSearchRegex => !thisSearchRegex.test(key))\n          ) {\n            return null;\n          }\n          return (\n            <label key={key} className=\"selectortron\">\n              <div className=\"ellipsis\">{key}</div>\n              <input\n                name={key}\n                type=\"checkbox\"\n                checked={this.props.selectedLocations.has(key)}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default SelectList;\n","// @flow\n\nimport { Map } from \"immutable\";\n\nconst convert = require(\"xml-js\");\n\nexport const topaz =\n  \"Circle K / Topaz Service Station, Templeville Road, Dublin 6, County Dublin\";\nconst typeStatusRegex = /([\\w\\s()-.]*kW\\s)\\(([\\w\\s-,]{3,})\\)/gim;\n\nexport type Locations = Map<string, Map<string, string>>;\n\ntype Placemark = {\n  name: { _text: string },\n  description: { _cdata: string }\n};\n\nexport const fetchEcars = () =>\n  fetch(\n    \"https://cors-anywhere.herokuapp.com/https://www.esb.ie/ECARS/kml/charging-locations.kml\"\n  )\n    .then(response => response.text())\n    .then(xml => {\n      const json = convert.xml2js(xml, { compact: true });\n      const chargers = json.kml.Document.Placemark;\n\n      let locations: Locations = Map({});\n      const mapLinks = {};\n\n      chargers.forEach((place: Placemark) => {\n        const name = place.name._text;\n        const description = place.description._cdata;\n        // $FlowFixMe\n        const matches = [...description.matchAll(typeStatusRegex)];\n\n        const mapLink = description.match(/(https:\\/\\/www.google.com\\S*)\"/);\n        if (mapLink) {\n          mapLinks[name] = mapLink[1];\n        }\n\n        matches.forEach(match => {\n          locations = locations.setIn([name, match[1].trim()], match[2].trim());\n        });\n        if (!matches.length) {\n          console.warn(\"no match:\", description);\n        }\n      });\n\n      return { mapLinks, locations };\n    });\n\nexport default fetchEcars;\n","// @flow\n\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faPlug,\n  faMapMarkerAlt\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport { Set } from \"immutable\";\n\nexport type StatusListProps = {\n  removeLocation: string => null,\n  selectedLocations: Set<string>,\n  locations: Locations,\n  mapLinks: {\n    [name: string]: string\n  }\n};\n\nclass LocationStatusList extends React.Component<StatusListProps> {\n  openMap = (event: SyntheticInputEvent<HTMLElement>) => {\n    const url = event.currentTarget.dataset.maplink;\n    if (url) {\n      window.open(url, \"_blank\");\n    }\n  };\n\n  removeLocation = (event: SyntheticInputEvent<HTMLButtonElement>) => {\n    const {\n      target: { name }\n    } = event;\n    this.props.removeLocation(name);\n  };\n\n  render() {\n    const { locations, selectedLocations, mapLinks } = this.props;\n\n    return (\n      <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n        {selectedLocations.map(name => {\n          const location = locations.get(name);\n          if (!location) {\n            return null;\n          }\n\n          return (\n            <div key={name} style={{ padding: 10 }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"flex-start\",\n                  justifyContent: \"space-between\"\n                }}\n              >\n                {name}\n                <FontAwesomeIcon\n                  icon={faMapMarkerAlt}\n                  size=\"2x\"\n                  style={{ paddingRight: 10 }}\n                  onClick={this.openMap}\n                  data-maplink={mapLinks[name]}\n                  color=\"TEAL\"\n                />\n              </div>\n              <div style={{ padding: 5 }}>\n                {location.entrySeq().map(([plugName, status]) => {\n                  const available = /Available/i.test(status);\n                  const iconColor = available ? \"lime\" : \"grey\";\n                  const color = available ? \"black\" : \"grey\";\n                  const icon = /DC/.test(plugName) ? faBolt : faPlug;\n                  return (\n                    <div key={plugName} style={{ color, padding: 5 }}>\n                      <FontAwesomeIcon\n                        icon={icon}\n                        color={iconColor}\n                        style={{ paddingRight: 5 }}\n                      />\n                      {plugName}: {status}\n                    </div>\n                  );\n                })}\n              </div>\n              <button onClick={this.removeLocation} name={name}>\n                remove location\n              </button>\n              <hr />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LocationStatusList;\n","// @flow\nimport React from \"react\";\nimport \"./App.css\";\n\nimport type { Locations } from \"./api/fetchEcars\";\n\nimport SelectList from \"./selectList\";\nimport { Map, Set, fromJS, isKeyed } from \"immutable\";\nimport fetchEcars from \"./api/fetchEcars\";\nimport LocationStatusList from \"./LocationStatusList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSync, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport onWindowFocus from \"./utils/onWindowFocus\";\n\nconst getSavedImmutable = (key = \"selectedLocations\") => {\n  const localLocations = localStorage.getItem(key);\n  if (!localLocations) return false;\n  const response = fromJS(JSON.parse(localLocations), function(key, value) {\n    return isKeyed(value) ? value.toMap() : value.toSet();\n  });\n  return (response: any);\n};\n\ntype AppState = {\n  selectedLocations: Set<string>,\n  locations: Locations,\n  search: string,\n  mapLinks: {\n    [name: string]: string\n  },\n  fetchError: boolean,\n  loading: boolean\n};\n\nclass App extends React.Component<{}, AppState> {\n  state = {\n    selectedLocations: getSavedImmutable(\"selectedLocations\") || Set(),\n    locations: getSavedImmutable(\"locations\") || Map(),\n    search: \"\",\n    mapLinks: {},\n    fetchError: false,\n    loading: false\n  };\n\n  componentDidMount() {\n    this.getLocations();\n    onWindowFocus(this.getLocations);\n  }\n\n  getLocations = () => {\n    this.setState({\n      loading: true\n    });\n    fetchEcars()\n      .then(({ locations, mapLinks }) => {\n        localStorage.setItem(\"locations\", JSON.stringify(locations.toJS()));\n        this.setState({\n          locations,\n          mapLinks,\n          fetchError: false,\n          loading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          fetchError: true,\n          loading: false\n        });\n      });\n  };\n\n  addLocation = (location: string) => {\n    const selectedLocations = this.state.selectedLocations.add(location);\n    return this.setSelected(selectedLocations);\n  };\n\n  removeLocation = (location: string) => {\n    const selectedLocations = this.state.selectedLocations.remove(location);\n    return this.setSelected(selectedLocations);\n  };\n\n  clearSelected = () => {\n    return this.setSelected(Set());\n  };\n\n  setSelected = (\n    selectedLocations: $PropertyType<AppState, \"selectedLocations\">\n  ) => {\n    this.setState({\n      selectedLocations\n    });\n    localStorage.setItem(\n      \"selectedLocations\",\n      JSON.stringify(selectedLocations.toJS())\n    );\n    return null;\n  };\n\n  setSearch = (event: SyntheticInputEvent<HTMLInputElement>) => {\n    this.setState({\n      search: event.target.value || \"\"\n    });\n  };\n\n  render() {\n    const {\n      locations,\n      selectedLocations,\n      search,\n      mapLinks,\n      fetchError,\n      loading\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div style={{ display: \"flex\" }}>\n          <input\n            onChange={this.setSearch}\n            value={search}\n            placeholder=\"Search Locations...\"\n            style={{\n              width: 10,\n              flexGrow: 1,\n              padding: 10,\n              fontSize: 30,\n              border: \"1px solid black\",\n              borderRight: \"none\"\n            }}\n          />\n          <button\n            onClick={this.setSearch}\n            value=\"\"\n            style={{\n              paddingRight: 20,\n              background: \"none\",\n              border: \"1px solid black\",\n              borderLeft: \"none\"\n            }}\n          >\n            <FontAwesomeIcon icon={faTimes} size=\"3x\" />\n          </button>\n          <button onClick={this.getLocations} style={{ width: 70 }}>\n            <FontAwesomeIcon\n              icon={faSync}\n              size=\"3x\"\n              color={fetchError ? \"red\" : \"lime\"}\n              className={loading ? \"spin\" : \"\"}\n            />\n          </button>\n        </div>\n        {search || !selectedLocations.size ? (\n          <SelectList\n            search={search}\n            locations={locations}\n            selectedLocations={selectedLocations}\n            removeLocation={this.removeLocation}\n            addLocation={this.addLocation}\n          />\n        ) : (\n          <LocationStatusList\n            locations={locations}\n            selectedLocations={selectedLocations}\n            removeLocation={this.removeLocation}\n            mapLinks={mapLinks}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// @flow\n\nexport default (callback: () => any) => {\n  document.addEventListener(\"visibilitychange\", () => {\n    if (document.visibilityState === \"visible\") {\n      callback();\n    }\n  });\n  window.addEventListener(\"focus\", callback);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}